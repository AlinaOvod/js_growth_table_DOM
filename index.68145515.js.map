{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAW,EAAG,SAAS,gBAAgB,CAAC,WAsB9C,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAE,gBAAgB,CAAC,QAAS,WAC1B,IAlBI,EAEA,EACA,EAEA,EACA,EACA,EACA,EAUE,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAG,SAAS,gBAAgB,CAAC,aAE3C,GAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,cAIvB,IAAK,IAHC,EAAS,EAAM,SAAS,GACxB,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAErC,EAAI,EAAG,EAAI,EAAa,IAC/B,EAAO,UAAU,GAIjB,EAAE,SAAS,CAAC,QAAQ,CAAC,eACvB,EAAM,SAAS,CAAC,IAGd,EAAE,SAAS,CAAC,QAAQ,CAAC,kBACvB,EAAK,OAAO,CAAC,SAAC,CADhB,EAEI,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,EAAI,MAAM,CAAC,EACb,GAGE,EAAE,SAAS,CAAC,QAAQ,CAAC,kBACvB,EAAK,OAAO,CAAC,SAAC,CADhB,EAEI,IAAM,EAAgB,EAAI,KAAK,CAAC,MAAM,CAAG,EAEzC,EAAI,UAAU,CAAC,EACjB,GA7CE,EAAW,CAFX,EAAQ,SAAS,aAAa,CAAC,UAEd,IAAI,CAAC,MAAM,CAC5B,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAExC,EAAY,EAAQ,IAAI,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,a,GACrD,EAAY,EAAQ,IAAI,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,a,GACrD,EAAY,EAAQ,IAAI,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,gB,GACrD,EAAY,EAAQ,IAAI,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,gB,GAE3D,EAAU,QAAQ,CAAG,GAdN,GAef,EAAU,QAAQ,CAAG,GAdN,EAef,EAAU,QAAQ,CAAG,GAhBN,GAiBf,EAAU,QAAQ,CAAG,GAhBN,CAsDf,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar buttons = _to_consumable_array(document.querySelectorAll(\"button\"));\nvar maxCount = 10;\nvar minCount = 2;\nfunction updateButtonState() {\n    var table = document.querySelector(\"table\");\n    var rowCount = table.rows.length;\n    var columnCount = table.rows[0].cells.length;\n    var appendRow = buttons.find(function(b) {\n        return b.classList.contains(\"append-row\");\n    });\n    var removeRow = buttons.find(function(b) {\n        return b.classList.contains(\"remove-row\");\n    });\n    var appendCol = buttons.find(function(b) {\n        return b.classList.contains(\"append-column\");\n    });\n    var removeCol = buttons.find(function(b) {\n        return b.classList.contains(\"remove-column\");\n    });\n    appendRow.disabled = rowCount >= maxCount;\n    removeRow.disabled = rowCount <= minCount;\n    appendCol.disabled = columnCount >= maxCount;\n    removeCol.disabled = columnCount <= minCount;\n}\nbuttons.forEach(function(b) {\n    b.addEventListener(\"click\", function() {\n        var table = document.querySelector(\"table\");\n        var rows = _to_consumable_array(document.querySelectorAll(\"table tr\"));\n        if (b.classList.contains(\"append-row\")) {\n            var newRow = table.insertRow();\n            var columnCount = table.rows[0].cells.length;\n            for(var i = 0; i < columnCount; i++)newRow.insertCell();\n        }\n        if (b.classList.contains(\"remove-row\")) table.deleteRow(-1);\n        if (b.classList.contains(\"append-column\")) rows.forEach(function(row) {\n            var newCell = document.createElement(\"td\");\n            row.append(newCell);\n        });\n        if (b.classList.contains(\"remove-column\")) rows.forEach(function(row) {\n            var lastCellIndex = row.cells.length - 1;\n            row.deleteCell(lastCellIndex);\n        });\n        updateButtonState();\n    });\n});\n\n//# sourceMappingURL=index.68145515.js.map\n","'use strict';\n\nconst buttons = [...document.querySelectorAll('button')];\n\nconst maxCount = 10;\nconst minCount = 2;\n\nfunction updateButtonState() {\n  const table = document.querySelector('table');\n\n  const rowCount = table.rows.length;\n  const columnCount = table.rows[0].cells.length;\n\n  const appendRow = buttons.find((b) => b.classList.contains('append-row'));\n  const removeRow = buttons.find((b) => b.classList.contains('remove-row'));\n  const appendCol = buttons.find((b) => b.classList.contains('append-column'));\n  const removeCol = buttons.find((b) => b.classList.contains('remove-column'));\n\n  appendRow.disabled = rowCount >= maxCount;\n  removeRow.disabled = rowCount <= minCount;\n  appendCol.disabled = columnCount >= maxCount;\n  removeCol.disabled = columnCount <= minCount;\n}\n\nbuttons.forEach((b) => {\n  b.addEventListener('click', () => {\n    const table = document.querySelector('table');\n    const rows = [...document.querySelectorAll('table tr')];\n\n    if (b.classList.contains('append-row')) {\n      const newRow = table.insertRow();\n      const columnCount = table.rows[0].cells.length;\n\n      for (let i = 0; i < columnCount; i++) {\n        newRow.insertCell();\n      }\n    }\n\n    if (b.classList.contains('remove-row')) {\n      table.deleteRow(-1);\n    }\n\n    if (b.classList.contains('append-column')) {\n      rows.forEach((row) => {\n        const newCell = document.createElement('td');\n\n        row.append(newCell);\n      });\n    }\n\n    if (b.classList.contains('remove-column')) {\n      rows.forEach((row) => {\n        const lastCellIndex = row.cells.length - 1;\n\n        row.deleteCell(lastCellIndex);\n      });\n    }\n\n    updateButtonState();\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","buttons","document","querySelectorAll","forEach","b","addEventListener","table","rowCount","columnCount","appendRow","removeRow","appendCol","removeCol","querySelector","rows","classList","contains","newRow","insertRow","cells","insertCell","deleteRow","row","newCell","createElement","append","lastCellIndex","deleteCell","find","disabled"],"version":3,"file":"index.68145515.js.map"}